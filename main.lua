local f      = require 'functions'local anim8  = require 'anim8'local HC     = require 'HC'local input  = require 'input'--############ Load Event ############function love.load( )  --Initial Variables--  _Debug      =                false  IsColliding =                false  osString    = love.system.getOS( )  velocity    =                    1  j           =                    0  inputsload()  --Add a circle to Mouse Position (Active only on debug)--  mouse = HC.circle                        ( 400, 300, 20 )   mouse:moveTo                ( love.mouse.getPosition( ) )  --Get window sizes--  windowX,windowY = love.graphics.getDimensions( )    --Initial Player Position--  posX =           windowX*.1  posY =           windowY*.5    --Placeholder animation grid--  image        = love.graphics.newImage      ( 'media/1945.png' )  local grid64 = anim8.newGrid( 64, 64, 1024, 768, 299, 101,   2)    --Sets background color--  love.graphics.setBackgroundColor( 137, 161, 216 )     --Objects--  player   = anim8.newAnimation( grid64( 1,'1-3' ), 0.1 )  enemy    = love.graphics.newImage( "enemy.png" )    --Blue Block placeholder  particle = love.graphics.newImage( "particle.png" ) --Particle Test placeholder    --Colliders--  playerCol = HC.rectangle( posX, posY, 64, 64 )end--############ Draw Event ############function love.draw()		--Draw Sine Wave Particle--	j = j + 1 for i = 0, 100, 1*0.2 do	   _Sine(i+j, j, posY) end    --Draw Objects--  player:draw(image, posX, posY, 1.55)                --Draw player  love.graphics.draw(enemy, (windowX*.9), windowY*.5) --Draw Enemy      --Draw Debug info--  if (_Debug == true) or (osString == "Android") then    playerCol:draw( 'line' )    mouse    :draw( 'fill' )	   Debug( velocity             , "Velocity"   , 0 )	   Debug( tostring(fullscreen_), "FullScreen" , 1 )	   Debug( tostring(touchNumber), "TouchNumber", 2 )	   Debug( tostring(IsColliding), "IsColliding", 3 )	   Debug( osString             , "Device"     , 4 )  end	--line(0, 600, 100, 400) --Create a line btween two pointsend--############ Update Event ############function love.update( dt )  inputs( dt ) --Keyboard and touch inputs  --Get Fullscreen Status--  fullscreen_, fulltype = love.window.getFullscreen( )   mouse:moveTo( love.mouse.getPosition( ) ) --Mouse position update  player:update( dt )    --Check for Collisions--  for shape, delta in pairs( HC.collisions(mouse) ) do     playerIsColiding = true;  end   if (playerIsColiding == true) then     IsColliding      = true     playerIsColiding = false  else      IsColliding     = false  end  playerCol:moveTo( posX-32, posY+32)  --Function Keys--  function love.keypressed(key)	     --FullScreen Key--     if key == "f11" then        love.window.setFullscreen(not fullscreen_) --Set fullscreen status     end	    	 --Show/hide Debug Key--     if key == "f9"  then	        _Debug = not _Debug	    end  end  windowX, windowY = love.graphics.getDimensions( ) --Updates the dimensions every frameend